{
	"info": {
		"_postman_id": "e6a4057d-e115-423f-93bf-af0e336542d3",
		"name": "Producto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20333084"
	},
	"item": [
		{
			"name": "Crear un producto válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"product_id\", data.id);\r",
							"\r",
							"pm.test(\"Código HTTP es 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Manzana\",\r\n    \"precio\": 1.15,\r\n    \"tipo\": \"Perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un producto inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Tipo de producto no permitido\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"Tipo de producto no permitido\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Materia oscura\",\r\n    \"precio\": 99.99,\r\n    \"tipo\": \"Desconocido\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los productos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Número de productos > 0', function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Código HTTP es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/:product_id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						":product_id"
					],
					"variable": [
						{
							"key": "product_id",
							"value": "{{product_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un producto por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Producto no encontrado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Manzana Dorada\",\r\n    \"precio\": 2.25,\r\n    \"tipo\": \"No perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products/:product_id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						":product_id"
					],
					"variable": [
						{
							"key": "product_id",
							"value": "{{product_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un producto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código es HTTP 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Producto no encontrado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Manzana Dorada\",\r\n    \"precio\": 2.25,\r\n    \"tipo\": \"No perecedero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP es 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/:product_id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						":product_id"
					],
					"variable": [
						{
							"key": "product_id",
							"value": "{{product_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un producto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Producto no encontrado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}